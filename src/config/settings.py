"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = environ.Path(__file__) - 2
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Load operating system environment variables and then prepare to use them
env = environ.Env()
# Try to load env in docker, except to load env in local
if os.path.exists(BASE_DIR('.env-prod')):
    environ.Env.read_env(BASE_DIR('.env-prod'))
else:
    environ.Env.read_env(BASE_DIR('.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY', default='dev')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['localhost'])
DOMAIN = env.str('DOMAIN', default='')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd apps

    # local apps
    'apps.user',
    'apps.line',
    'apps.coa',
    'apps.log',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

POSTGRES_ON = env.bool('POSTGRES_ON', default=False)
if POSTGRES_ON:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env.str('POSTGRES_DB', default='name'),
            'USER': env.str('POSTGRES_USER', default='user'),
            'PASSWORD': env.str('POSTGRES_PASSWORD', default='password'),
            'HOST': env.str('POSTGRES_HOST', default='host'),
            'PORT': env.int('POSTGRES_PORT', default='port'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# INITIAL DATA
# ------------------------------------------------------------------------------
# See https://docs.djangoproject.com/en/2.1/howto/initial-data/
FIXTURE_DIRS = (
    str(BASE_DIR('fixtures')),
)


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# SITE FRAMEWORK
# ------------------------------------------------------------------------------
# See https://docs.djangoproject.com/en/2.1/ref/contrib/sites/
SITE_ID = 1

# Custom user app defaults
# Select the correct user model
AUTH_USER_MODEL = 'user.CustomUser'

# LOGIN_URL = '/users/login/'
ADMIN_URL = env.str('ADMIN_URL', default='admin')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# EMAIL CONFIGURATION
# ------------------------------------------------------------------------------
EMAIL_BACKEND = env.str('EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = env.str('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = env.str('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD', default='')
SERVER_EMAIL = env.str('SERVER_EMAIL', default='')
ADMINS = [(admin.split('@')[0], admin) for admin in env.list('ADMINS', default=[])]

# MAILJET_API_KEY = env.str('MAILJET_API_KEY', default='')
# MAILJET_API_SECRET = env.str('MAILJET_API_SECRET', default='')

SENDGRID_API_KEY = env.str('SENDGRID_API_KEY', default='')
SENDGRID_SANDBOX_MODE_IN_DEBUG = False

CONFIRM_DAYS = 7

# SENDGRID_SANDBOX_MODE_IN_DEBUG = False
# LINE CONFIRURATION
# ------------------------------------------------------------------------------
LINE_TEST_MODE = env.bool('LINE_TEST_MODE', default=False)
LINE_CHANNEL_ACCESS_TOKEN = env.str('LINE_CHANNEL_ACCESS_TOKEN', default='')
LINE_CHANNEL_SECRET = env.str('LINE_CHANNEL_SECRET', default='')
LINE_CHANNEL_ACCESS_TOKEN_TEST = env.str('LINE_CHANNEL_ACCESS_TOKEN_TEST', default='')
LINE_CHANNEL_SECRET_TEST = env.str('LINE_CHANNEL_SECRET_TEST', default='')


CHROME_PATH = env.str("CHROME_PATH", default="")
LIBREOFFICE_PATH = env.str("LIBREOFFICE_PATH", default="")
